{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\WeatherApp\\\\reactfrontend\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport './Forecast.css';\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.oneDay = (dayForecast, i) => {\n      const now_temp = i === 0 ? dayForecast.now_temp : undefined;\n      const weather_state_abbr = dayForecast.weather_state_abbr;\n      const imageURL = \"https://www.metaweather.com/static/img/weather/\" + weather_state_abbr + \".svg\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: this.props.time + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, dayForecast.date_of_forecast), /*#__PURE__*/React.createElement(\"img\", {\n        src: imageURL,\n        width: 60,\n        height: 60,\n        alt: \"bla\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, dayForecast.weather_state_name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"Max: \", dayForecast.max_temp), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \"Min: \", dayForecast.min_temp), now_temp && /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }\n      }, \"Now: \", now_temp));\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    let forecastDays = this.props.forecastDays;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, this.props.city, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Time: \", this.props.time)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, forecastDays.map((day, index) => this.oneDay(day, index))));\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/WeatherApp/reactfrontend/src/components/Forecast.js"],"names":["React","Forecast","Component","constructor","props","oneDay","dayForecast","i","now_temp","undefined","weather_state_abbr","imageURL","time","date_of_forecast","weather_state_name","max_temp","min_temp","state","render","forecastDays","city","map","day","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,MARmB,GAQV,CAACC,WAAD,EAAcC,CAAd,KAAoB;AAC3B,YAAMC,QAAQ,GAAID,CAAC,KAAK,CAAN,GAAUD,WAAW,CAACE,QAAtB,GAAiCC,SAAnD;AACA,YAAMC,kBAAkB,GAAGJ,WAAW,CAACI,kBAAvC;AACA,YAAMC,QAAQ,GAAG,oDAAoDD,kBAApD,GAAyE,MAA1F;AACA,0BACA;AAAI,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWQ,IAAX,GAAkBL,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,WAAW,CAACO,gBAAjB,CADF,eAEE;AAAK,QAAA,GAAG,EAAEF,QAAV;AAAoB,QAAA,KAAK,EAAE,EAA3B;AAA+B,QAAA,MAAM,EAAE,EAAvC;AAA2C,QAAA,GAAG,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,WAAW,CAACQ,kBAAjB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUR,WAAW,CAACS,QAAtB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUT,WAAW,CAACU,QAAtB,CALF,EAMGR,QAAQ,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUA,QAAV,CANhB,CADA;AAUD,KAtBkB;;AAGf,SAAKS,KAAL,GAAa,EAAb;AAGH;;AAkBDC,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,GAAG,KAAKf,KAAL,CAAWe,YAA9B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWgB,IAAhB,oBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAa,KAAKhB,KAAL,CAAWQ,IAAxB,CADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,YAAY,CAACE,GAAb,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB,KAAKlB,MAAL,CAAYiB,GAAZ,EAAiBC,KAAjB,CAAlC,CADH,CAJF,CADF;AAUH;;AArCkC;;AAwCvC,eAAetB,QAAf","sourcesContent":["import React from 'react';\n\nimport './Forecast.css';\n\nclass Forecast extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n    \n    oneDay = (dayForecast, i) => {\n      const now_temp = (i === 0 ? dayForecast.now_temp : undefined);\n      const weather_state_abbr = dayForecast.weather_state_abbr;\n      const imageURL = \"https://www.metaweather.com/static/img/weather/\" + weather_state_abbr + \".svg\";\n      return (\n      <li key={this.props.time + i }>\n        <h3>{dayForecast.date_of_forecast}</h3>\n        <img src={imageURL} width={60} height={60} alt={\"bla\"}/>\n        <h4>{dayForecast.weather_state_name}</h4>  \n        <h4>Max: {dayForecast.max_temp}</h4>\n        <h4>Min: {dayForecast.min_temp}</h4>\n        {now_temp && (<h4>Now: {now_temp}</h4>)}\n      </li>\n      )\n    }\n\n    render() {        \n        let forecastDays = this.props.forecastDays;\n        return (\n          <div className=\"location-style\">\n            <h4>{this.props.city} <br />\n              <span>Time: {this.props.time}</span>\n            </h4>\n            <ul>\n              {forecastDays.map( (day, index) => this.oneDay(day, index) ) } \n            </ul>\n          </div>\n        );\n    }\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}