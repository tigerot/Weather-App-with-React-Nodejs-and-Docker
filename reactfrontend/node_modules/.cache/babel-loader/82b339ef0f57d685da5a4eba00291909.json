{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\WeatherApp\\\\reactfrontend\\\\src\\\\components\\\\MainContent.js\";\nimport React from 'react';\nimport Forecast from './Forecast';\nimport '../components/MainContent.css';\n\nclass MainContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createForecast = forecast => {\n      const city = forecast.city;\n      const time_now = forecast.time_now;\n      let forecastDays = [];\n\n      for (let i = 0; i < forecast.consolidated_weather.length; i++) {\n        const date_of_forecast = forecast.consolidated_weather[i].applicable_date;\n        const max_temp = Math.round(forecast.consolidated_weather[i].max_temp);\n        const min_temp = Math.round(forecast.consolidated_weather[i].min_temp);\n        const now_temp = i === 0 ? Math.round(forecast.consolidated_weather[i].the_temp) : '';\n        const weather_state_name = forecast.consolidated_weather[i].weather_state_name;\n        const weather_state_abbr = forecast.consolidated_weather[i].weather_state_abbr;\n        forecastDays.push({\n          date_of_forecast,\n          max_temp,\n          min_temp,\n          now_temp,\n          weather_state_name,\n          weather_state_abbr\n        });\n      }\n\n      return {\n        city,\n        time_now,\n        forecastDays\n      };\n    };\n\n    this.createForecastComponent = data => {\n      return /*#__PURE__*/React.createElement(Forecast, {\n        key: Math.floor(Math.random() * 100),\n        city: data.city,\n        time: data.time_now,\n        forecastDays: data.forecastDays,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.forecasts = [];\n    this.state = {\n      allForecasts: [],\n      modified: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.renderForecast = this.renderForecast.bind(this);\n  }\n\n  renderForecast() {\n    let components = [];\n\n    for (let i = 0; i < this.state.allForecasts.length; i++) {\n      let forecastProps = this.createForecast(this.state.allForecasts[i]);\n      components.push(this.createForecastComponent(forecastProps));\n    }\n\n    return components;\n  } // componentDidMount() {\n  //   if(this.forcasts.length > 3)\n  //   {\n  //     this.forcasts.shift();            \n  //   }\n  //   this.setState({allForcasts: this.forcasts});\n  // }\n\n\n  handleClick(event) {\n    // event.preventDefault();\n    let el = document.querySelector(\"input[type='text']\");\n    if (el.value === '') return;\n    let locName = el.value;\n    console.log(locName);\n    const url = `http://localhost:5000/forecasts/${locName}/`;\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      const date = new Date();\n      const time_now = date.getHours() + ':' + date.getMinutes();\n      this.forecasts.push({\n        city: locName,\n        time_now,\n        consolidated_weather: data.consolidated_weather\n      });\n\n      if (this.forecasts.length > 3) {\n        this.forecasts.shift();\n      }\n\n      this.setState({\n        allForecasts: this.forecasts\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    console.log(\"this.state.allForecasts: \", this.state.allForecasts);\n    const allComponents = this.renderForecast();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"text_input\",\n      type: \"text\",\n      name: \"search\",\n      placeholder: \"Search for location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"button\",\n      value: \"getWeather\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Get Weather\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all-forecasts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, (this.state.allForecasts === undefined || this.state.allForecasts.length < 1) && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 95\n      }\n    }, \"No forecasts to show\"), this.state.allForecasts && this.state.allForecasts.length >= 1 && allComponents.map(item => {\n      return item;\n    })));\n  }\n\n}\n\nexport default MainContent;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/WeatherApp/reactfrontend/src/components/MainContent.js"],"names":["React","Forecast","MainContent","Component","constructor","props","createForecast","forecast","city","time_now","forecastDays","i","consolidated_weather","length","date_of_forecast","applicable_date","max_temp","Math","round","min_temp","now_temp","the_temp","weather_state_name","weather_state_abbr","push","createForecastComponent","data","floor","random","forecasts","state","allForecasts","modified","handleClick","bind","renderForecast","components","forecastProps","event","el","document","querySelector","value","locName","console","log","url","fetch","then","response","json","date","Date","getHours","getMinutes","shift","setState","catch","err","render","allComponents","undefined","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Forecast from './Forecast';\r\n\r\nimport '../components/MainContent.css'; \r\n\r\nclass MainContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.forecasts = [];\r\n    this.state = { allForecasts: [] , modified: false };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.renderForecast = this.renderForecast.bind(this);\r\n  } \r\n  \r\n  createForecast = (forecast) => {\r\n    const city = forecast.city;     \r\n    const time_now = forecast.time_now;\r\n    let forecastDays = [];  \r\n    \r\n    for (let i = 0; i < forecast.consolidated_weather.length; i++) {\r\n      const date_of_forecast = forecast.consolidated_weather[i].applicable_date;\r\n      const max_temp = Math.round(forecast.consolidated_weather[i].max_temp);\r\n      const min_temp = Math.round(forecast.consolidated_weather[i].min_temp);\r\n      const now_temp = i === 0 ? Math.round(forecast.consolidated_weather[i].the_temp) : '';\r\n      const weather_state_name = forecast.consolidated_weather[i].weather_state_name;\r\n      const weather_state_abbr = forecast.consolidated_weather[i].weather_state_abbr;\r\n     \r\n      forecastDays.push({date_of_forecast, max_temp, min_temp, now_temp, weather_state_name, weather_state_abbr});\r\n    }\r\n\r\n    return {city, time_now, forecastDays};\r\n  }\r\n \r\n  createForecastComponent = (data) => {\r\n    return (<Forecast key={Math.floor(Math.random() * 100)} city={data.city} time={data.time_now} forecastDays={data.forecastDays}/>) \r\n  } \r\n  \r\n  renderForecast() {\r\n    \r\n    let components = [];\r\n    for(let i = 0; i < this.state.allForecasts.length; i++) {\r\n      let forecastProps = this.createForecast(this.state.allForecasts[i]); \r\n        \r\n      components.push(this.createForecastComponent(forecastProps));      \r\n    }\r\n\r\n    return components;     \r\n  }\r\n  \r\n  // componentDidMount() {\r\n  //   if(this.forcasts.length > 3)\r\n  //   {\r\n  //     this.forcasts.shift();            \r\n  //   }\r\n  //   this.setState({allForcasts: this.forcasts});\r\n  // }\r\n\r\n  handleClick(event) {\r\n   // event.preventDefault();\r\n    \r\n    let el = document.querySelector(\"input[type='text']\");\r\n    if (el.value === '')\r\n      return;\r\n\r\n    let locName = el.value;    \r\n    \r\n    console.log(locName);\r\n    \r\n    const url = `http://localhost:5000/forecasts/${locName}/`;    \r\n    fetch(url)\r\n      .then(response => { return response.json(); })\r\n        .then(data => {               \r\n          const date = new Date();\r\n          const time_now = date.getHours() + ':' + date.getMinutes();\r\n          \r\n          this.forecasts.push({ city: locName, time_now , consolidated_weather: data.consolidated_weather});\r\n          \r\n          if(this.forecasts.length > 3) {\r\n            this.forecasts.shift();            \r\n          }\r\n\r\n          this.setState({allForecasts: this.forecasts});          \r\n        })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });                         \r\n  }    \r\n\r\n  render() {\r\n    console.log(\"this.state.allForecasts: \", this.state.allForecasts);\r\n    const allComponents = this.renderForecast();\r\n    return(      \r\n      <div>\r\n        <div>\r\n          <input className=\"text_input\" type=\"text\" name=\"search\" placeholder=\"Search for location\"/> \r\n          <button className=\"button\" type=\"button\" name=\"button\" value=\"getWeather\" onClick={this.handleClick}>Get Weather</button>        \r\n        </div>\r\n        <div className=\"all-forecasts\">          \r\n          { (this.state.allForecasts === undefined || this.state.allForecasts.length < 1) && (<h3>No forecasts to show</h3>)}\r\n          {(this.state.allForecasts && this.state.allForecasts.length >= 1) && (allComponents.map(item => {return item;} ))}          \r\n        </div>                     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n"]},"metadata":{},"sourceType":"module"}